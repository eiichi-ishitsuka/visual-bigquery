{
    "ABS": {"prefix": "ABS", "body": ["ABS($1)"],"description": ""},
    "ACOS": {"prefix": "ACOS", "body": ["ACOS($1)"],"description": ""},
    "ACOSH": {"prefix": "ACOSH", "body": ["ACOSH($1)"],"description": ""},
    "ANY_VALUE": {"prefix": "ANY_VALUE", "body": ["ANY_VALUE($1)"],"description": ""},
    "APPROX_COUNT_DISTINCT": {"prefix": "APPROX_COUNT_DISTINCT", "body": ["APPROX_COUNT_DISTINCT($1)"],"description": ""},
    "APPROX_QUANTILES": {"prefix": "APPROX_QUANTILES", "body": ["APPROX_QUANTILES($1)"],"description": ""},
    "APPROX_TOP_COUNT": {"prefix": "APPROX_TOP_COUNT", "body": ["APPROX_TOP_COUNT($1)"],"description": ""},
    "APPROX_TOP_SUM": {"prefix": "APPROX_TOP_SUM", "body": ["APPROX_TOP_SUM($1)"],"description": ""},
    "ARRAY": {"prefix": "ARRAY", "body": ["ARRAY($1)"],"description": ""},
    "ARRAY_AGG": {"prefix": "ARRAY_AGG", "body": ["ARRAY_AGG($1)"],"description": ""},
    "ARRAY_CONCAT": {"prefix": "ARRAY_CONCAT", "body": ["ARRAY_CONCAT($1)"],"description": ""},
    "ARRAY_CONCAT_AGG": {"prefix": "ARRAY_CONCAT_AGG", "body": ["ARRAY_CONCAT_AGG($1)"],"description": ""},
    "ARRAY_LENGTH": {"prefix": "ARRAY_LENGTH", "body": ["ARRAY_LENGTH($1)"],"description": ""},
    "ARRAY_REVERSE": {"prefix": "ARRAY_REVERSE", "body": ["ARRAY_REVERSE($1)"],"description": ""},
    "ARRAY_TO_STRING": {"prefix": "ARRAY_TO_STRING", "body": ["ARRAY_TO_STRING($1)"],"description": ""},
    "ASIN": {"prefix": "ASIN", "body": ["ASIN($1)"],"description": ""},
    "ASINH": {"prefix": "ASINH", "body": ["ASINH($1)"],"description": ""},
    "ATAN": {"prefix": "ATAN", "body": ["ATAN($1)"],"description": ""},
    "ATAN2": {"prefix": "ATAN2", "body": ["ATAN2($1)"],"description": ""},
    "ATANH": {"prefix": "ATANH", "body": ["ATANH($1)"],"description": ""},
    "AVG": {"prefix": "AVG", "body": ["AVG($1)"],"description": ""},
    "BIT_AND": {"prefix": "BIT_AND", "body": ["BIT_AND($1)"],"description": ""},
    "BIT_COUNT": {"prefix": "BIT_COUNT", "body": ["BIT_COUNT($1)"],"description": ""},
    "BIT_OR": {"prefix": "BIT_OR", "body": ["BIT_OR($1)"],"description": ""},
    "BIT_XOR": {"prefix": "BIT_XOR", "body": ["BIT_XOR($1)"],"description": ""},
    "BYTE_LENGTH": {"prefix": "BYTE_LENGTH", "body": ["BYTE_LENGTH($1)"],"description": ""},
    "CEIL": {"prefix": "CEIL", "body": ["CEIL($1)"],"description": ""},
    "CEILING": {"prefix": "CEILING", "body": ["CEILING($1)"],"description": ""},
    "CHARACTER_LENGTH": {"prefix": "CHARACTER_LENGTH", "body": ["CHARACTER_LENGTH($1)"],"description": ""},
    "CHAR_LENGTH": {"prefix": "CHAR_LENGTH", "body": ["CHAR_LENGTH($1)"],"description": ""},
    "COALESCE": {"prefix": "COALESCE", "body": ["COALESCE($1)"],"description": ""},
    "CODE_POINTS_TO_BYTES": {"prefix": "CODE_POINTS_TO_BYTES", "body": ["CODE_POINTS_TO_BYTES($1)"],"description": ""},
    "CODE_POINTS_TO_STRING": {"prefix": "CODE_POINTS_TO_STRING", "body": ["CODE_POINTS_TO_STRING($1)"],"description": ""},
    "CONCAT": {"prefix": "CONCAT", "body": ["CONCAT($1)"],"description": ""},
    "CORR": {"prefix": "CORR", "body": ["CORR($1)"],"description": ""},
    "COS": {"prefix": "COS", "body": ["COS($1)"],"description": ""},
    "COSH": {"prefix": "COSH", "body": ["COSH($1)"],"description": ""},
    "COUNT": {"prefix": "COUNT", "body": ["COUNT($1)"],"description": ""},
    "COUNTIF": {"prefix": "COUNTIF", "body": ["COUNTIF($1)"],"description": ""},
    "COVAR_POP": {"prefix": "COVAR_POP", "body": ["COVAR_POP($1)"],"description": ""},
    "COVAR_SAMP": {"prefix": "COVAR_SAMP", "body": ["COVAR_SAMP($1)"],"description": ""},
    "CUME_DIST": {"prefix": "CUME_DIST", "body": ["CUME_DIST($1)"],"description": ""},
    "CURRENT_DATE": {"prefix": "CURRENT_DATE", "body": ["CURRENT_DATE($1)"],"description": ""},
    "CURRENT_DATETIME": {"prefix": "CURRENT_DATETIME", "body": ["CURRENT_DATETIME($1)"],"description": ""},
    "CURRENT_TIME": {"prefix": "CURRENT_TIME", "body": ["CURRENT_TIME($1)"],"description": ""},
    "CURRENT_TIMESTAMP": {"prefix": "CURRENT_TIMESTAMP", "body": ["CURRENT_TIMESTAMP($1)"],"description": ""},
    "DATE": {"prefix": "DATE", "body": ["DATE($1)"],"description": ""},
    "DATETIME": {"prefix": "DATETIME", "body": ["DATETIME($1)"],"description": ""},
    "DATETIME_ADD": {"prefix": "DATETIME_ADD", "body": ["DATETIME_ADD($1)"],"description": ""},
    "DATETIME_DIFF": {"prefix": "DATETIME_DIFF", "body": ["DATETIME_DIFF($1)"],"description": ""},
    "DATETIME_SUB": {"prefix": "DATETIME_SUB", "body": ["DATETIME_SUB($1)"],"description": ""},
    "DATETIME_TRUNC": {"prefix": "DATETIME_TRUNC", "body": ["DATETIME_TRUNC($1)"],"description": ""},
    "DATE_ADD": {"prefix": "DATE_ADD", "body": ["DATE_ADD($1)"],"description": ""},
    "DATE_DIFF": {"prefix": "DATE_DIFF", "body": ["DATE_DIFF($1)"],"description": ""},
    "DATE_FROM_UNIX_DATE": {"prefix": "DATE_FROM_UNIX_DATE", "body": ["DATE_FROM_UNIX_DATE($1)"],"description": ""},
    "DATE_SUB": {"prefix": "DATE_SUB", "body": ["DATE_SUB($1)"],"description": ""},
    "DATE_TRUNC": {"prefix": "DATE_TRUNC", "body": ["DATE_TRUNC($1)"],"description": ""},
    "DENSE_RANK": {"prefix": "DENSE_RANK", "body": ["DENSE_RANK($1)"],"description": ""},
    "DIV": {"prefix": "DIV", "body": ["DIV($1)"],"description": ""},
    "ENDS_WITH": {"prefix": "ENDS_WITH", "body": ["ENDS_WITH($1)"],"description": ""},
    "EXP": {"prefix": "EXP", "body": ["EXP($1)"],"description": ""},
    "EXTRACT": {"prefix": "EXTRACT", "body": ["EXTRACT($1)"],"description": ""},
    "FARM_FINGERPRINT": {"prefix": "FARM_FINGERPRINT", "body": ["FARM_FINGERPRINT($1)"],"description": ""},
    "FLOOR": {"prefix": "FLOOR", "body": ["FLOOR($1)"],"description": ""},
    "FORMAT": {"prefix": "FORMAT", "body": ["FORMAT($1)"],"description": ""},
    "FORMAT_DATE": {"prefix": "FORMAT_DATE", "body": ["FORMAT_DATE($1)"],"description": ""},
    "FORMAT_DATETIME": {"prefix": "FORMAT_DATETIME", "body": ["FORMAT_DATETIME($1)"],"description": ""},
    "FORMAT_TIME": {"prefix": "FORMAT_TIME", "body": ["FORMAT_TIME($1)"],"description": ""},
    "FORMAT_TIMESTAMP": {"prefix": "FORMAT_TIMESTAMP", "body": ["FORMAT_TIMESTAMP($1)"],"description": ""},
    "FROM_BASE32": {"prefix": "FROM_BASE32", "body": ["FROM_BASE32($1)"],"description": ""},
    "FROM_BASE64": {"prefix": "FROM_BASE64", "body": ["FROM_BASE64($1)"],"description": ""},
    "FROM_HEX": {"prefix": "FROM_HEX", "body": ["FROM_HEX($1)"],"description": ""},
    "GENERATE_ARRAY": {"prefix": "GENERATE_ARRAY", "body": ["GENERATE_ARRAY($1)"],"description": ""},
    "GENERATE_DATE_ARRAY": {"prefix": "GENERATE_DATE_ARRAY", "body": ["GENERATE_DATE_ARRAY($1)"],"description": ""},
    "GENERATE_TIMESTAMP_ARRAY": {"prefix": "GENERATE_TIMESTAMP_ARRAY", "body": ["GENERATE_TIMESTAMP_ARRAY($1)"],"description": ""},
    "GENERATE_UUID": {"prefix": "GENERATE_UUID", "body": ["GENERATE_UUID($1)"],"description": ""},
    "GREATEST": {"prefix": "GREATEST", "body": ["GREATEST($1)"],"description": ""},
    "HLL_COUNT.EXTRACT": {"prefix": "HLL_COUNT.EXTRACT", "body": ["HLL_COUNT.EXTRACT($1)"],"description": ""},
    "HLL_COUNT.INIT": {"prefix": "HLL_COUNT.INIT", "body": ["HLL_COUNT.INIT($1)"],"description": ""},
    "HLL_COUNT.MERGE": {"prefix": "HLL_COUNT.MERGE", "body": ["HLL_COUNT.MERGE($1)"],"description": ""},
    "HLL_COUNT.MERGE_PARTIAL": {"prefix": "HLL_COUNT.MERGE_PARTIAL", "body": ["HLL_COUNT.MERGE_PARTIAL($1)"],"description": ""},
    "IEEE_DIVIDE": {"prefix": "IEEE_DIVIDE", "body": ["IEEE_DIVIDE($1)"],"description": ""},
    "IF": {"prefix": "IF", "body": ["IF($1)"],"description": ""},
    "IFNULL": {"prefix": "IFNULL", "body": ["IFNULL($1)"],"description": ""},
    "IS_INF": {"prefix": "IS_INF", "body": ["IS_INF($1)"],"description": ""},
    "IS_NAN": {"prefix": "IS_NAN", "body": ["IS_NAN($1)"],"description": ""},
    "JSON_EXTRACT_ARRAY": {"prefix": "JSON_EXTRACT_ARRAY", "body": ["JSON_EXTRACT_ARRAY($1)"],"description": ""},
    "LAG": {"prefix": "LAG", "body": ["LAG($1)"],"description": ""},
    "LAST_VALUE": {"prefix": "LAST_VALUE", "body": ["LAST_VALUE($1)"],"description": ""},
    "LEAD": {"prefix": "LEAD", "body": ["LEAD($1)"],"description": ""},
    "LEAST": {"prefix": "LEAST", "body": ["LEAST($1)"],"description": ""},
    "LENGTH": {"prefix": "LENGTH", "body": ["LENGTH($1)"],"description": ""},
    "LN": {"prefix": "LN", "body": ["LN($1)"],"description": ""},
    "LOG": {"prefix": "LOG", "body": ["LOG($1)"],"description": ""},
    "LOG10": {"prefix": "LOG10", "body": ["LOG10($1)"],"description": ""},
    "LOGICAL_AND": {"prefix": "LOGICAL_AND", "body": ["LOGICAL_AND($1)"],"description": ""},
    "LOGICAL_OR": {"prefix": "LOGICAL_OR", "body": ["LOGICAL_OR($1)"],"description": ""},
    "LOWER": {"prefix": "LOWER", "body": ["LOWER($1)"],"description": ""},
    "LPAD": {"prefix": "LPAD", "body": ["LPAD($1)"],"description": ""},
    "LTRIM": {"prefix": "LTRIM", "body": ["LTRIM($1)"],"description": ""},
    "MAX": {"prefix": "MAX", "body": ["MAX($1)"],"description": ""},
    "MD5": {"prefix": "MD5", "body": ["MD5($1)"],"description": ""},
    "MIN": {"prefix": "MIN", "body": ["MIN($1)"],"description": ""},
    "MOD": {"prefix": "MOD", "body": ["MOD($1)"],"description": ""},
    "NET.HOST": {"prefix": "NET.HOST", "body": ["NET.HOST($1)"],"description": ""},
    "NET.IPV4_FROM_INT64": {"prefix": "NET.IPV4_FROM_INT64", "body": ["NET.IPV4_FROM_INT64($1)"],"description": ""},
    "NET.IPV4_TO_INT64": {"prefix": "NET.IPV4_TO_INT64", "body": ["NET.IPV4_TO_INT64($1)"],"description": ""},
    "NET.IP_FROM_STRING": {"prefix": "NET.IP_FROM_STRING", "body": ["NET.IP_FROM_STRING($1)"],"description": ""},
    "NET.IP_NET_MASK": {"prefix": "NET.IP_NET_MASK", "body": ["NET.IP_NET_MASK($1)"],"description": ""},
    "NET.IP_TO_STRING": {"prefix": "NET.IP_TO_STRING", "body": ["NET.IP_TO_STRING($1)"],"description": ""},
    "NET.IP_TRUNC": {"prefix": "NET.IP_TRUNC", "body": ["NET.IP_TRUNC($1)"],"description": ""},
    "NET.PUBLIC_SUFFIX": {"prefix": "NET.PUBLIC_SUFFIX", "body": ["NET.PUBLIC_SUFFIX($1)"],"description": ""},
    "NET.REG_DOMAIN": {"prefix": "NET.REG_DOMAIN", "body": ["NET.REG_DOMAIN($1)"],"description": ""},
    "NET.SAFE_IP_FROM_STRING": {"prefix": "NET.SAFE_IP_FROM_STRING", "body": ["NET.SAFE_IP_FROM_STRING($1)"],"description": ""},
    "NORMALIZE": {"prefix": "NORMALIZE", "body": ["NORMALIZE($1)"],"description": ""},
    "NORMALIZE_AND_CASEFOLD": {"prefix": "NORMALIZE_AND_CASEFOLD", "body": ["NORMALIZE_AND_CASEFOLD($1)"],"description": ""},
    "NTH_VALUE": {"prefix": "NTH_VALUE", "body": ["NTH_VALUE($1)"],"description": ""},
    "NTILE": {"prefix": "NTILE", "body": ["NTILE($1)"],"description": ""},
    "NULLIF": {"prefix": "NULLIF", "body": ["NULLIF($1)"],"description": ""},
    "OFFSET": {"prefix": "OFFSET", "body": ["OFFSET($1)"],"description": ""},
    "ORDINAL": {"prefix": "ORDINAL", "body": ["ORDINAL($1)"],"description": ""},
    "PARSE_DATE": {"prefix": "PARSE_DATE", "body": ["PARSE_DATE($1)"],"description": ""},
    "PARSE_DATETIME": {"prefix": "PARSE_DATETIME", "body": ["PARSE_DATETIME($1)"],"description": ""},
    "PARSE_TIME": {"prefix": "PARSE_TIME", "body": ["PARSE_TIME($1)"],"description": ""},
    "PARSE_TIMESTAMP": {"prefix": "PARSE_TIMESTAMP", "body": ["PARSE_TIMESTAMP($1)"],"description": ""},
    "PERCENTILE_CONT": {"prefix": "PERCENTILE_CONT", "body": ["PERCENTILE_CONT($1)"],"description": ""},
    "PERCENTILE_DISC": {"prefix": "PERCENTILE_DISC", "body": ["PERCENTILE_DISC($1)"],"description": ""},
    "PERCENT_RANK": {"prefix": "PERCENT_RANK", "body": ["PERCENT_RANK($1)"],"description": ""},
    "POW": {"prefix": "POW", "body": ["POW($1)"],"description": ""},
    "POWER": {"prefix": "POWER", "body": ["POWER($1)"],"description": ""},
    "RANGE_BUCKET": {"prefix": "RANGE_BUCKET", "body": ["RANGE_BUCKET($1)"],"description": ""},
    "RANK": {"prefix": "RANK", "body": ["RANK($1)"],"description": ""},
    "REGEXP_CONTAINS": {"prefix": "REGEXP_CONTAINS", "body": ["REGEXP_CONTAINS($1)"],"description": ""},
    "REGEXP_EXTRACT": {"prefix": "REGEXP_EXTRACT", "body": ["REGEXP_EXTRACT($1)"],"description": ""},
    "REGEXP_EXTRACT_ALL": {"prefix": "REGEXP_EXTRACT_ALL", "body": ["REGEXP_EXTRACT_ALL($1)"],"description": ""},
    "REGEXP_REPLACE": {"prefix": "REGEXP_REPLACE", "body": ["REGEXP_REPLACE($1)"],"description": ""},
    "REPEAT": {"prefix": "REPEAT", "body": ["REPEAT($1)"],"description": ""},
    "REPLACE": {"prefix": "REPLACE", "body": ["REPLACE($1)"],"description": ""},
    "REVERSE": {"prefix": "REVERSE", "body": ["REVERSE($1)"],"description": ""},
    "ROUND": {"prefix": "ROUND", "body": ["ROUND($1)"],"description": ""},
    "RPAD": {"prefix": "RPAD", "body": ["RPAD($1)"],"description": ""},
    "RTRIM": {"prefix": "RTRIM", "body": ["RTRIM($1)"],"description": ""},
    "SAFE_ADD": {"prefix": "SAFE_ADD", "body": ["SAFE_ADD($1)"],"description": ""},
    "SAFE_CONVERT_BYTES_TO_STRING": {"prefix": "SAFE_CONVERT_BYTES_TO_STRING", "body": ["SAFE_CONVERT_BYTES_TO_STRING($1)"],"description": ""},
    "SAFE_DIVIDE": {"prefix": "SAFE_DIVIDE", "body": ["SAFE_DIVIDE($1)"],"description": ""},
    "SAFE_MULTIPLY": {"prefix": "SAFE_MULTIPLY", "body": ["SAFE_MULTIPLY($1)"],"description": ""},
    "SAFE_NEGATE": {"prefix": "SAFE_NEGATE", "body": ["SAFE_NEGATE($1)"],"description": ""},
    "SAFE_OFFSET": {"prefix": "SAFE_OFFSET", "body": ["SAFE_OFFSET($1)"],"description": ""},
    "SAFE_ORDINAL": {"prefix": "SAFE_ORDINAL", "body": ["SAFE_ORDINAL($1)"],"description": ""},
    "SAFE_SUBTRACT": {"prefix": "SAFE_SUBTRACT", "body": ["SAFE_SUBTRACT($1)"],"description": ""},
    "SESSION_USER": {"prefix": "SESSION_USER", "body": ["SESSION_USER($1)"],"description": ""},
    "SHA1": {"prefix": "SHA1", "body": ["SHA1($1)"],"description": ""},
    "SHA256": {"prefix": "SHA256", "body": ["SHA256($1)"],"description": ""},
    "SHA512": {"prefix": "SHA512", "body": ["SHA512($1)"],"description": ""},
    "SIGN": {"prefix": "SIGN", "body": ["SIGN($1)"],"description": ""},
    "SIN": {"prefix": "SIN", "body": ["SIN($1)"],"description": ""},
    "SINH": {"prefix": "SINH", "body": ["SINH($1)"],"description": ""},
    "SPLIT": {"prefix": "SPLIT", "body": ["SPLIT($1)"],"description": ""},
    "SQRT": {"prefix": "SQRT", "body": ["SQRT($1)"],"description": ""},
    "STARTS_WITH": {"prefix": "STARTS_WITH", "body": ["STARTS_WITH($1)"],"description": ""},
    "STDDEV": {"prefix": "STDDEV", "body": ["STDDEV($1)"],"description": ""},
    "STDDEV_POP": {"prefix": "STDDEV_POP", "body": ["STDDEV_POP($1)"],"description": ""},
    "STDDEV_SAMP": {"prefix": "STDDEV_SAMP", "body": ["STDDEV_SAMP($1)"],"description": ""},
    "STRING": {"prefix": "STRING", "body": ["STRING($1)"],"description": ""},
    "STRING_AGG": {"prefix": "STRING_AGG", "body": ["STRING_AGG($1)"],"description": ""},
    "STRPOS": {"prefix": "STRPOS", "body": ["STRPOS($1)"],"description": ""},
    "ST_AREA": {"prefix": "ST_AREA", "body": ["ST_AREA($1)"],"description": ""},
    "ST_ASBINARY": {"prefix": "ST_ASBINARY", "body": ["ST_ASBINARY($1)"],"description": ""},
    "ST_ASGEOJSON": {"prefix": "ST_ASGEOJSON", "body": ["ST_ASGEOJSON($1)"],"description": ""},
    "ST_ASTEXT": {"prefix": "ST_ASTEXT", "body": ["ST_ASTEXT($1)"],"description": ""},
    "ST_BOUNDARY": {"prefix": "ST_BOUNDARY", "body": ["ST_BOUNDARY($1)"],"description": ""},
    "ST_CENTROID": {"prefix": "ST_CENTROID", "body": ["ST_CENTROID($1)"],"description": ""},
    "ST_CENTROID_AGG": {"prefix": "ST_CENTROID_AGG", "body": ["ST_CENTROID_AGG($1)"],"description": ""},
    "ST_CLOSESTPOINT": {"prefix": "ST_CLOSESTPOINT", "body": ["ST_CLOSESTPOINT($1)"],"description": ""},
    "ST_CLUSTERDBSCAN": {"prefix": "ST_CLUSTERDBSCAN", "body": ["ST_CLUSTERDBSCAN($1)"],"description": ""},
    "ST_CONTAINS": {"prefix": "ST_CONTAINS", "body": ["ST_CONTAINS($1)"],"description": ""},
    "ST_CONVEXHULL": {"prefix": "ST_CONVEXHULL", "body": ["ST_CONVEXHULL($1)"],"description": ""},
    "ST_COVEREDBY": {"prefix": "ST_COVEREDBY", "body": ["ST_COVEREDBY($1)"],"description": ""},
    "ST_COVERS": {"prefix": "ST_COVERS", "body": ["ST_COVERS($1)"],"description": ""},
    "ST_DIFFERENCE": {"prefix": "ST_DIFFERENCE", "body": ["ST_DIFFERENCE($1)"],"description": ""},
    "ST_DIMENSION": {"prefix": "ST_DIMENSION", "body": ["ST_DIMENSION($1)"],"description": ""},
    "ST_DISJOINT": {"prefix": "ST_DISJOINT", "body": ["ST_DISJOINT($1)"],"description": ""},
    "ST_DISTANCE": {"prefix": "ST_DISTANCE", "body": ["ST_DISTANCE($1)"],"description": ""},
    "ST_DUMP": {"prefix": "ST_DUMP", "body": ["ST_DUMP($1)"],"description": ""},
    "ST_DWITHIN": {"prefix": "ST_DWITHIN", "body": ["ST_DWITHIN($1)"],"description": ""},
    "ST_EQUALS": {"prefix": "ST_EQUALS", "body": ["ST_EQUALS($1)"],"description": ""},
    "ST_GEOGFROMGEOJSON": {"prefix": "ST_GEOGFROMGEOJSON", "body": ["ST_GEOGFROMGEOJSON($1)"],"description": ""},
    "ST_GEOGFROMTEXT": {"prefix": "ST_GEOGFROMTEXT", "body": ["ST_GEOGFROMTEXT($1)"],"description": ""},
    "ST_GEOGFROMWKB": {"prefix": "ST_GEOGFROMWKB", "body": ["ST_GEOGFROMWKB($1)"],"description": ""},
    "ST_GEOGPOINT": {"prefix": "ST_GEOGPOINT", "body": ["ST_GEOGPOINT($1)"],"description": ""},
    "ST_GEOGPOINTFROMGEOHASH": {"prefix": "ST_GEOGPOINTFROMGEOHASH", "body": ["ST_GEOGPOINTFROMGEOHASH($1)"],"description": ""},
    "ST_GEOHASH": {"prefix": "ST_GEOHASH", "body": ["ST_GEOHASH($1)"],"description": ""},
    "ST_INTERSECTION": {"prefix": "ST_INTERSECTION", "body": ["ST_INTERSECTION($1)"],"description": ""},
    "ST_INTERSECTS": {"prefix": "ST_INTERSECTS", "body": ["ST_INTERSECTS($1)"],"description": ""},
    "ST_INTERSECTSBOX": {"prefix": "ST_INTERSECTSBOX", "body": ["ST_INTERSECTSBOX($1)"],"description": ""},
    "ST_ISCOLLECTION": {"prefix": "ST_ISCOLLECTION", "body": ["ST_ISCOLLECTION($1)"],"description": ""},
    "ST_ISEMPTY": {"prefix": "ST_ISEMPTY", "body": ["ST_ISEMPTY($1)"],"description": ""},
    "ST_LENGTH": {"prefix": "ST_LENGTH", "body": ["ST_LENGTH($1)"],"description": ""},
    "ST_MAKELINE": {"prefix": "ST_MAKELINE", "body": ["ST_MAKELINE($1)"],"description": ""},
    "ST_MAKEPOLYGON": {"prefix": "ST_MAKEPOLYGON", "body": ["ST_MAKEPOLYGON($1)"],"description": ""},
    "ST_MAKEPOLYGONORIENTED": {"prefix": "ST_MAKEPOLYGONORIENTED", "body": ["ST_MAKEPOLYGONORIENTED($1)"],"description": ""},
    "ST_MAXDISTANCE": {"prefix": "ST_MAXDISTANCE", "body": ["ST_MAXDISTANCE($1)"],"description": ""},
    "ST_NUMPOINTS": {"prefix": "ST_NUMPOINTS", "body": ["ST_NUMPOINTS($1)"],"description": ""},
    "ST_PERIMETER": {"prefix": "ST_PERIMETER", "body": ["ST_PERIMETER($1)"],"description": ""},
    "ST_SIMPLIFY": {"prefix": "ST_SIMPLIFY", "body": ["ST_SIMPLIFY($1)"],"description": ""},
    "ST_SNAPTOGRID": {"prefix": "ST_SNAPTOGRID", "body": ["ST_SNAPTOGRID($1)"],"description": ""},
    "ST_TOUCHES": {"prefix": "ST_TOUCHES", "body": ["ST_TOUCHES($1)"],"description": ""},
    "ST_UNION": {"prefix": "ST_UNION", "body": ["ST_UNION($1)"],"description": ""},
    "ST_UNION_AGG": {"prefix": "ST_UNION_AGG", "body": ["ST_UNION_AGG($1)"],"description": ""},
    "ST_WITHIN": {"prefix": "ST_WITHIN", "body": ["ST_WITHIN($1)"],"description": ""},
    "ST_X": {"prefix": "ST_X", "body": ["ST_X($1)"],"description": ""},
    "ST_Y": {"prefix": "ST_Y", "body": ["ST_Y($1)"],"description": ""},
    "SUBSTR": {"prefix": "SUBSTR", "body": ["SUBSTR($1)"],"description": ""},
    "TAN": {"prefix": "TAN", "body": ["TAN($1)"],"description": ""},
    "TANH": {"prefix": "TANH", "body": ["TANH($1)"],"description": ""},
    "TIME": {"prefix": "TIME", "body": ["TIME($1)"],"description": ""},
    "TIMESTAMP": {"prefix": "TIMESTAMP", "body": ["TIMESTAMP($1)"],"description": ""},
    "TIMESTAMP_ADD": {"prefix": "TIMESTAMP_ADD", "body": ["TIMESTAMP_ADD($1)"],"description": ""},
    "TIMESTAMP_DIFF": {"prefix": "TIMESTAMP_DIFF", "body": ["TIMESTAMP_DIFF($1)"],"description": ""},
    "TIMESTAMP_MICROS": {"prefix": "TIMESTAMP_MICROS", "body": ["TIMESTAMP_MICROS($1)"],"description": ""},
    "TIMESTAMP_MILLIS": {"prefix": "TIMESTAMP_MILLIS", "body": ["TIMESTAMP_MILLIS($1)"],"description": ""},
    "TIMESTAMP_SECONDS": {"prefix": "TIMESTAMP_SECONDS", "body": ["TIMESTAMP_SECONDS($1)"],"description": ""},
    "TIMESTAMP_SUB": {"prefix": "TIMESTAMP_SUB", "body": ["TIMESTAMP_SUB($1)"],"description": ""},
    "TIMESTAMP_TRUNC": {"prefix": "TIMESTAMP_TRUNC", "body": ["TIMESTAMP_TRUNC($1)"],"description": ""},
    "TIME_ADD": {"prefix": "TIME_ADD", "body": ["TIME_ADD($1)"],"description": ""},
    "TIME_DIFF": {"prefix": "TIME_DIFF", "body": ["TIME_DIFF($1)"],"description": ""},
    "TIME_SUB": {"prefix": "TIME_SUB", "body": ["TIME_SUB($1)"],"description": ""},
    "TIME_TRUNC": {"prefix": "TIME_TRUNC", "body": ["TIME_TRUNC($1)"],"description": ""},
    "TO_BASE32": {"prefix": "TO_BASE32", "body": ["TO_BASE32($1)"],"description": ""},
    "TO_BASE64": {"prefix": "TO_BASE64", "body": ["TO_BASE64($1)"],"description": ""},
    "TO_CODE_POINTS": {"prefix": "TO_CODE_POINTS", "body": ["TO_CODE_POINTS($1)"],"description": ""},
    "TO_HEX": {"prefix": "TO_HEX", "body": ["TO_HEX($1)"],"description": ""},
    "TO_JSON_STRING": {"prefix": "TO_JSON_STRING", "body": ["TO_JSON_STRING($1)"],"description": ""},
    "TRIM": {"prefix": "TRIM", "body": ["TRIM($1)"],"description": ""},
    "TRUNC": {"prefix": "TRUNC", "body": ["TRUNC($1)"],"description": ""},
    "UNIX_DATE": {"prefix": "UNIX_DATE", "body": ["UNIX_DATE($1)"],"description": ""},
    "UNIX_MICROS": {"prefix": "UNIX_MICROS", "body": ["UNIX_MICROS($1)"],"description": ""},
    "UNIX_MILLIS": {"prefix": "UNIX_MILLIS", "body": ["UNIX_MILLIS($1)"],"description": ""},
    "UNIX_SECONDS": {"prefix": "UNIX_SECONDS", "body": ["UNIX_SECONDS($1)"],"description": ""},
    "UPPER": {"prefix": "UPPER", "body": ["UPPER($1)"],"description": ""},
    "VAR_POP": {"prefix": "VAR_POP", "body": ["VAR_POP($1)"],"description": ""},
    "VAR_SAMP": {"prefix": "VAR_SAMP", "body": ["VAR_SAMP($1)"],"description": ""},
    "VARIANCE": {"prefix": "VARIANCE", "body": ["VARIANCE($1)"],"description": ""},
    "SELECT FROM" : {
        "prefix": "SELECT - Visual BigQuery",
        "body": [
            "SELECT",
            "\t",
            "FROM",
            "\t${1:table}"
        ],
        "description": "SELECT FROM"
    },
    "SELECT FROM WHERE" : {
        "prefix": "SELECT",
        "body": [
            "SELECT",
            "\t",
            "FROM",
            "\t${1:table}",
            "WHERE",
            "\t$2"
        ],
        "description": "SELECT FROM WHERE"
    },
    "CASE WHEN (inline)": {
        "prefix": "CASE WHEN",
        "body": ["CASE WHEN ${1:bool_expr} THEN ${2:expr} ELSE ${3:expr} END"],
        "description": "CASE(inline)"
    },
    "CASE WHEN ": {
        "prefix": "CASE WHEN",
        "body": [
            "CASE WHEN ${1:bool_expr} THEN",
            "\t${2:expr}",
            "ELSE",
            "\t${3:expr}",
            "END"],
        "description": "CASE"
    },
    "WITH": {
        "prefix": "WITH",
        "body": [
            "WITH ${1:queryname} AS (",
            "\tSELECT",
            "\t\t",
            "\tFROM",
            "\t\t${2:table}",
            ")"
        ],
        "description": "WITH subquery"
    },
    "PARTITION CURRENT": {
        "prefix": "_PARTITIONTIME",
        "body": ["DATE(_PARTITIONTIME) = CURRENT_DATE('${1:timezone}')"],
        "description": "current_date partition"
    },
    "RANK() OVER(ORDER BY)": {
        "prefix": "RANK",
        "body": ["RANK() OVER(PARTITION BY ${1:expr})"],
        "description": "RANK() OVER(ORDER BY)"
    },
    "RANK() OVER(PARTITION BY ORDER BY)": {
        "prefix": "RANK",
        "body": ["RANK() OVER(PARTITION BY ${1:expr} ORDER BY ${2:expr})"],
        "description": "RANK() OVER(PARTITION BY ORDER BY)"
    },
    "ROW_NUMBER() OVER(ORDER BY)": {
        "prefix": "ROW_NUMBER",
        "body": ["ROW_NUMBER() OVER(PARTITION BY ${1:expr})"],
        "description": "ROW_NUMBER() OVER(ORDER BY)"
    },
    "ROW_NUMBER() OVER(PARTITION BY ORDER BY)": {
        "prefix": "ROW_NUMBER",
        "body": ["ROW_NUMBER() OVER(PARTITION BY ${1:expr} ORDER BY ${2:expr})"],
        "description": "ROW_NUMBER() OVER(PARTITION BY ORDER BY)"
    },
    "CREATE TEMP UDF": {
        "prefix": "CREATE UDF",
        "body": [
            "CREATE TEMPORARY FUNCTION ${1:func}(${2:param} ${3:type}) RETURNS ${4:type} AS (",
            "\t${5:logic}",
            ");"
        ],
        "description": "Create templorary SQL UDF"
    },
    "CREATE TEMP JS UDF": {
        "prefix": "CREATE JavaScript UDF",
        "body": [
            "CREATE TEMPORARY FUNCTION ${1:func}(${2:param} ${3:type}) RETURNS ${4:type} LANGUAGE js AS",
            "\t\"\"\"",
            "\t${5:logic}",
            "\t\"\"\";"
        ],
        "description": "Create templorary JavaScript UDF"
    }
}
